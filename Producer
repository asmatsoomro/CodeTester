import java.util.Properties;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.common.serialization.StringSerializer;
import org.apache.kafka.common.serialization.Serializer;

public class PromoProducer {
    public static void main(String[] args) {
        String topicName = "com.retail.promotions";
        String kafkaServer = "localhost:9092";
        
        // Set producer properties
        Properties props = new Properties();
        props.put("bootstrap.servers", kafkaServer);
        props.put("key.serializer", StringSerializer.class.getName());
        props.put("value.serializer", PromoSerializer.class.getName());
        
        // Create producer
        Producer<String, Promo> producer = new KafkaProducer<>(props);
        
        // Create a Promo object
        Promo promo = new Promo("promoCode123", "10% off your next purchase");
        
        // Send Promo object to Kafka topic
        producer.send(new ProducerRecord<>(topicName, promo.getPromoCode(), promo));
        
        // Close producer
        producer.close();
    }
}

class PromoSerializer implements Serializer<Promo> {
    @Override
    public byte[] serialize(String topic, Promo promo) {
        if (promo == null) {
            return null;
        }
        
        try {
            ByteArrayOutputStream out = new ByteArrayOutputStream();
            ObjectOutputStream objOut = new ObjectOutputStream(out);
            objOut.writeObject(promo);
            objOut.flush();
            return out.toByteArray();
        } catch (IOException e) {
            throw new RuntimeException("Failed to serialize Promo", e);
        }
    }
}
